<project name="InvManager" default="main">
	<property environment="env"/>
	<!-- Properties -->

	<property name="build.dir" value="build"/>
	<property name="extern.dir" value="extern"/>
	<property name="src.dir" value="src/"/>

	<property name="download.dir" value="download"/>

	<property name="classes.dir" value="${build.dir}/classes"/>
	<property name="jar.dir" value="dist"/>

	<property name="forge.dir" value="${build.dir}/forge"/>
	<property name="mcp.dir" value="${forge.dir}/mcp"/>

	<property name="mcpsrc.dir" value="${mcp.dir}/src"/>

	<property name="mc.version" value="1.4.7"/>
	<property name="forge.version" value="6.6.0.515"/>
	<property name="project.version" value="1.2.2"/>
	<property name="computercraft.version" value="1.48pr2"/>
	<property name="buildcraft.version" value="3.4.2"/>

	<property name="computercraft.mirror" value="http://www.mediafire.com/download.php?ffqk5infgdrd829"/>

	<property name="forge.name" value="minecraftforge-src-${mc.version}-${forge.version}.zip"/>
	<property name="computercraft.name" value="ComputerCraftAPI${computercraft.version}.zip"/>
	<property name="buildcraft.name" value="BuildCraft-${buildcraft.version}.zip"/>

	<available property="forge-exists" file="${download.dir}/${forge.name}"/>
	<available property="computercraft-exists" file="${download.dir}/${computercraft.name}"/>
	<available property="buildcraft-exists" file="${download.dir}/${buildcraft.name}"/>

	<condition property="out-of-date">
		<not>
			<and>
				<available file="${download.dir}/${forge.name}"/>
				<available file="${mcpsrc.dir}"/>
				<available file="${download.dir}/${computercraft.name}"/>
			</and>
		</not>
	</condition>

	<condition property="dependencies-out-of-date">
		<not>
			<and>
				<available file="${download.dir}/${computercraft.name}"/>
				<available file="${download.dir}/${buildcraft.name}"/>
				<available file="${extern.dir}/cc-${computercraft.version}"/>
				<available file="${extern.dir}/BuildCraft-${buildcraft.version}"/>
			</and>
		</not>
	</condition>

	<mkdir dir="${download.dir}"/>

	<!-- Targets -->

	<!-- Clear build directory -->
	<target name="clean">
		<delete dir="${build.dir}"/>
	</target>

	<!-- Download necessary files -->
	<target name="download-files" depends="download-forge,download-computercraft,download-buildcraft"/>

	<!-- Download forge (if it doesn't exist) -->
	<target name="download-forge" unless="forge-exists">
		<get src="http://files.minecraftforge.net/${forge.name}" dest="${download.dir}" usetimestamp="True"/>
	</target>

	<!-- Download ComputerCraft (if it doesn't exist) -->
	<target name="download-computercraft" unless="computercraft-exists">
		<get src="${computercraft.mirror}" dest="${download.dir}/${computercraft.name}" usetimestamp="True"/>
	</target>

	<!-- Download BuildCraft (if it doesn't exist) -->
	<target name="download-buildcraft" unless="buildcraft-exists">
		<get src="https://github.com/BuildCraft/BuildCraft/archive/${buildcraft.version}.zip" dest="${download.dir}/${buildcraft.name}" usetimestamp="True"/>
	</target>

	<!-- Setup mcp and forge -->
	<target name="setup" depends="download-files" if="out-of-date">

		<delete dir="${forge.dir}" failonerror="false"/>

		<unzip dest="${forge.dir}/.." src="${download.dir}/${forge.name}"/>

		<!-- Fix executable permissions -->
		<chmod dir="${forge.dir}" perm="ugo+rx" includes="**.sh"/>

		<!-- Install forge -->
		<exec dir="${forge.dir}" executable="cmd" osfamily="windows">
			<arg line="/c install.cmd"/>
		</exec>

		<exec dir="${forge.dir}" executable="sh" osfamily="unix">
			<arg value="install.sh"/>
		</exec>

	</target>

	<target name="dependencies" depends="download-files" if="dependencies-out-of-date">
		<delete dir="${extern.dir}" failonerror="false"/>
		<mkdir dir="${extern.dir}"/>

		<unzip dest="${extern.dir}/cc-${computercraft.version}" src="${download.dir}/${computercraft.name}"/>
		<unzip dest="${extern.dir}" src="${download.dir}/${buildcraft.name}"/>
	</target>

	<target name="compile" depends="setup,dependencies">

		<delete dir="${classes.dir}"/>
		<mkdir dir="${classes.dir}"/>

		<!-- Copy sources -->
		<copy todir="${mcpsrc.dir}/minecraft">
			<fileset dir="${src.dir}"/>
			<filterset>
				<filter token="VERSION" value="${project.version}" />
			</filterset>
		</copy>

		<!-- Copy dependencies -->
		<copy todir="${mcpsrc.dir}/minecraft">
			<fileset dir="${extern.dir}/cc-${computercraft.version}/src"/>
		</copy>
		<mkdir dir="${mcpsrc.dir}/minecraft/buildcraft/api"/>
		<copy todir="${mcpsrc.dir}/minecraft/buildcraft/api">
			<fileset dir="${extern.dir}/BuildCraft-${buildcraft.version}/common/buildcraft/api"/>
		</copy>

		<!-- Recompile -->
		<exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
			<arg line="/c recompile.bat"/>
		</exec>

		<exec dir="${mcp.dir}" executable="sh" osfamily="unix">
			<arg value="recompile.sh"/>
		</exec>
		
		<!-- Check for failure -->
		<fail message="MCP failed to build">
			<condition>
				<resourcecontains resource="${mcp.dir}/logs/client_compile.log" substring="error:"/>
			</condition>
		</fail>
		
		<!-- Reobfuscate -->
		<exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
			<arg line="/c reobfuscate.bat"/>
		</exec>

		<exec dir="${mcp.dir}" executable="sh" osfamily="unix">
			<arg value="reobfuscate.sh"/>
		</exec>

		<!-- Copy classes -->
		<copy todir="${classes.dir}">
			<fileset dir="${mcp.dir}/reobf/minecraft"/>
		</copy>

		<!-- Copy resources -->
		<mkdir dir="${classes.dir}/com/bombstrike/cc/invmanager/lua"/>
		<copy todir="${classes.dir}/com/bombstrike/cc/invmanager/lua">
			<fileset dir="${src.dir}/com/bombstrike/cc/invmanager/lua"/>
		</copy>
		<mkdir dir="${classes.dir}/com/bombstrike/cc/invmanager/gfx"/>
		<copy todir="${classes.dir}/com/bombstrike/cc/invmanager/gfx">
			<fileset dir="${src.dir}/com/bombstrike/cc/invmanager/gfx"/>
		</copy>

		<copy todir="${classes.dir}">
			<fileset file="mcmod.info"/>
			<filterset>
				<filter token="VERSION" value="${project.version}" />
			</filterset>
		</copy>

		<!-- Reset src dir to post-forge-install state -->
		<delete dir="${mcpsrc.dir}/minecraft/com"/>
		<delete dir="${mcpsrc.dir}/minecraft/dan200"/>
		<delete dir="${mcpsrc.dir}/minecraft/buildcraft"/>

	</target>

	<!-- Package the compiled files -->
	<target name="package" depends="compile">

		<delete dir="${jar.dir}"/>
		<mkdir dir="${jar.dir}"/>
		<jar destfile="${jar.dir}/${ant.project.name}-${project.version}.jar" basedir="${classes.dir}"/>
		<!--<copy todir="${jar.dir}/changelog">
			<fileset dir="${resources.dir}/changelog">
				<include name="*" />
			</fileset>
		</copy>-->

	</target>

	<!-- Default target to run -->
	<target name="main" depends="package"/>

</project>
